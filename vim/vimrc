scriptencoding utf-8
set encoding=utf-8

filetype plugin on   
filetype indent on

set nocompatible               " be iMproved
filetype off                   " required by vundle
au BufWritePost vimrc so $MYVIMRC

set rtp+=~/.vim/vundle
call vundle#begin()
source ~/.vim/vundles
call vundle#end()
syntax on


" ================ Basic Settings  =================

"let mapleader = '\'
set number                      "Line numbers are good
set backspace=indent,eol,start  "Allow backspace in insert mode
set history=1000                "Store lots of :cmdline history
set showcmd                     "Show incomplete cmds down the bottom
set showmode                    "Show current mode down the bottom
set gcr=a:blinkon0              "Disable cursor blink
set visualbell                  "No sounds
set autoread                    "Reload files changed outside vim
set hidden
set laststatus=2                "It enabled powerline to be present always
set cursorline                  " highlight the line of the cursor
set list                        " Show invisible characters
set listchars=tab:▸\ ,trail:•,extends:❯,precedes:❮
set guifont=Monaco\ for\ Powerline:h12
let &t_SI = "\<Esc>]50;CursorShape=1\x7"
let &t_EI = "\<Esc>]50;CursorShape=0\x7"


" ================ Search Settings  =================

set incsearch        "Find the next match as we type the search
set hlsearch         "Hilight searches by default
set viminfo='100,f1  "Save up to 100 marks, enable capital marks

" ================ Turn Off Swap Files ==============

set noswapfile
set nobackup
set nowb

" ================ Persistent Undo ==================

silent !mkdir ~/.vim/backups > /dev/null 2>&1
set undodir=~/.vim/backups
set undofile

" ================ Indentation ======================

set autoindent
set smartindent
set smarttab
set shiftwidth=2
set softtabstop=2
set tabstop=2
set expandtab
set wrap       "wrap lines
set linebreak    "Wrap lines at convenient points
set nolist

" ================ Easy Align =======================
" Start interactive EasyAlign in visual mode (e.g. vip<Enter>)
vmap <Enter> <Plug>(EasyAlign)
" Start interactive EasyAlign for a motion/text object (e.g. gaip)
nmap ga <Plug>(EasyAlign)

" ================ Completion =======================

set wildmode=list:longest
set wildmenu                "enable ctrl-n and ctrl-p to scroll thru matches
set wildignore=*.o,*.obj,*~ "stuff to ignore when tab completing
set wildignore+=*vim/backups*
set wildignore+=*sass-cache*
set wildignore+=*DS_Store*
set wildignore+=vendor/rails/**
set wildignore+=vendor/cache/**
set wildignore+=*.gem
set wildignore+=log/**
set wildignore+=tmp/**
set wildignore+=*.png,*.jpg,*.gif

" ================= COPY to ClipBoard ==============
" In visual mode, use Y to copy to system clipboard
vnoremap Y "*y

" " In normal mode, do the same with the current line
nnoremap Y "*yy
set clipboard=unnamed           "To copy to clipboard
"set clipboard=unnamedplus

" ================ Scrolling ========================

set scrolloff=8         "Start scrolling when we're 8 lines away from margin
set sidescrolloff=15
set sidescroll=1

"============== IGNORE ctrlP  ======================
"
set wildignore+=*/tmp/*,*.so,*.swp,*.zip

let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/](\.(git|hg|svn)|bower_components|node_modules|dist|build|vendor/bundle)$',
  \ 'file': '\v\.(exe|so|dll)$'
  \ }

"============== THEME  ===========================
"
"set background=dark
colorscheme dracula

"============== UtilSnippet =======================
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"
let g:UltiSnipsListSnippets = "<c-tab>"
" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
"============== AIR LINE ===========================
"
"============= funky - for search functions ======== 
"nnoremap <Leader>fu :CtrlPFunky<Cr>
nnoremap <C-f> :CtrlPFunky<Cr>
" narrow the list down with a word under cursor
"nnoremap <C-S-f> :execute 'CtrlPFunky ' . expand('<cword>')<Cr>

"
" ============ Surround Vim Shortcuts ============== 
vmap ' S'
vmap " S"
vmap { S{
vmap } S}
vmap ( S(
vmap ) S)
vmap [ S[
vmap ] S]

vnoremap << <
vnoremap >> >

nmap <leader>cs' cs"'
nmap <leader>cs" cs'"
nmap <leader>s' cysiw'
nmap <leader>s" ysiw"
nmap <leader>s( ysiw)
nmap <leader>s[ ysiw]
nmap <leader>s{ ysiw}

nmap <leader>d' yss'
nmap <leader>d" yss"
nmap <leader>d( yss)
nmap <leader>d[ yss]
nmap <leader>d{ yss}
" ============ Surround Vim Shortcuts ============== 

let g:airline_theme             = 'powerlineish'
let g:airline#extensions#branch#enabled = 1
let g:airline#extensions#syntastic#enabled = 1
let g:airline_powerline_fonts   = 1

"let g:airline_section_warning = ''
"let g:airline_inactive_collapse = 0

"Colors for indent
hi IndentGuidesOdd  ctermbg=white
hi IndentGuidesEven ctermbg=lightgrey
set cursorline
hi CursorLine term=bold cterm=bold guibg=Grey40
source ~/.dotfiles/vim/alias


